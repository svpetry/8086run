"use strict";(self.webpackChunkemu_xt=self.webpackChunkemu_xt||[]).push([[242],{242:(e,t,r)=>{r.d(t,{b:()=>n});var i,a=r(841),s=r(897);!function(e){e[e.Unmodified=0]="Unmodified",e[e.And=1]="And",e[e.Or=2]="Or",e[e.Xor=3]="Xor"}(i||(i={}));class n extends a.c{getAllowSwitchCharSets(){return this.characterMapA!=this.characterMapB}getCrtStartAddr(){return(this.crtRegisters[12]<<8)+this.crtRegisters[13]}getUnderlineLocation(){return 31&this.crtRegisters[20]}getMaximumCharScanLine(){return 31&this.crtRegisters[9]}getCrtOffset(){return this.crtRegisters[19]}getPresetRowScan(){return this.crtRegisters[8]}getHorizontalPixelPanning(){return 15&this.attributeRegisters[19]}getEnableLineGraphicsCharacterCode(){return(4&this.attributeRegisters[16])>0}constructor(){super(),Object.defineProperty(this,"planeCount",{enumerable:!0,configurable:!0,writable:!0,value:4}),Object.defineProperty(this,"planes",{enumerable:!0,configurable:!0,writable:!0,value:new Array(this.planeCount)}),Object.defineProperty(this,"latches",{enumerable:!0,configurable:!0,writable:!0,value:new Array(this.planeCount)}),Object.defineProperty(this,"mapMask",{enumerable:!0,configurable:!0,writable:!0,value:new Array(this.planeCount)}),Object.defineProperty(this,"enableSetReset",{enumerable:!0,configurable:!0,writable:!0,value:new Array(this.planeCount)}),Object.defineProperty(this,"setReset",{enumerable:!0,configurable:!0,writable:!0,value:new Array(this.planeCount)}),Object.defineProperty(this,"modeControlRegister",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"colorSelectRegister",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"miscOutputRegister",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"sequencerIndex",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"sequencerRegisters",{enumerable:!0,configurable:!0,writable:!0,value:new Array(5)}),Object.defineProperty(this,"gdcIndex",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"gdcRegisters",{enumerable:!0,configurable:!0,writable:!0,value:new Array(9)}),Object.defineProperty(this,"attributeFlipFlop",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"attributeIndex",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"attributeRegisters",{enumerable:!0,configurable:!0,writable:!0,value:new Array(21)}),Object.defineProperty(this,"graphicsMode",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"colorPlaneEnabled",{enumerable:!0,configurable:!0,writable:!0,value:new Array(4)}),Object.defineProperty(this,"readMapSelect",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"rotateCount",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"bitMask",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"oddEven",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"colorDontCare",{enumerable:!0,configurable:!0,writable:!0,value:new Array(4)}),Object.defineProperty(this,"mapMaskRegister",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"colorCompareRegister",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"featureControlRegister",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"gdcGraphicsMode",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"monochrome",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"overscanColor",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"memoryModeRegister",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"characterMapSelectRegister",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"characterMapA",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"characterMapB",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"clockMode",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"currentDataFunction",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"writeMode",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"readMode",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"chain4",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"egaPalette",{enumerable:!0,configurable:!0,writable:!0,value:new Array(16)}),Object.defineProperty(this,"cgaPalette",{enumerable:!0,configurable:!0,writable:!0,value:new Array(16)}),Object.defineProperty(this,"memStart",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"memSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"crtBasePort",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"charBoxWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),this.startAddr=655360,this.setRamSize(262144),this.memStart=720896,this.memSize=65536,this.crtBasePort=976,this.miscOutputRegister=3,this.bitMask=255;for(let e=0;e<16;e++)this.egaPalette[e]=this.cgaColors[e],this.cgaPalette[e]=this.cgaColors[e];for(let e=0;e<this.planeCount;e++)this.planes[e]=new Uint8Array(65536),this.mapMask[e]=!0}fillIgnoredFields(){super.fillIgnoredFields(),this.ignoredFields.add("planes")}getMemoryData(){const e=new Array(this.planeCount);for(let t=0;t<this.planeCount;t++)e[t]=this.planes[t].buffer;return e}updateMemory(e){for(let t=0;t<this.planeCount;t++)this.planes[t]=new Uint8Array(e[t])}in(e){if(e==this.crtBasePort+5)return this.getDataRegister();switch(e){case 984:return this.modeControlRegister;case 985:return this.colorSelectRegister}return 65535}out(e,t,r){if(e==this.crtBasePort+4)return this.setIndexRegister(255&t),void(r&&this.out(981,t>>8,!1));if(e!=this.crtBasePort+5)if(e!=this.crtBasePort+10)switch(e){case 962:this.miscOutputRegister=255&t,this.crtBasePort=0==(1&t)?944:976;break;case 964:this.sequencerIndex=7&t,r&&this.out(965,t>>8&255,!1);break;case 974:this.gdcIndex=15&t,r&&this.out(975,t>>8,!1);break;case 975:switch(this.gdcIndex){case 0:this.setReset[0]=(1&t)>0,this.setReset[1]=(2&t)>0,this.setReset[2]=(4&t)>0,this.setReset[3]=(8&t)>0;break;case 1:this.enableSetReset[0]=(1&t)>0,this.enableSetReset[1]=(2&t)>0,this.enableSetReset[2]=(4&t)>0,this.enableSetReset[3]=(8&t)>0;break;case 2:this.colorCompareRegister=255&t;break;case 3:switch(this.rotateCount=7&t,t>>3&3){case 0:this.currentDataFunction=i.Unmodified;break;case 1:this.currentDataFunction=i.And;break;case 2:this.currentDataFunction=i.Or;break;case 3:this.currentDataFunction=i.Xor}break;case 4:this.readMapSelect=3&t;break;case 5:this.writeMode=3&t,this.readMode=t>>3&1;break;case 6:switch(this.gdcGraphicsMode=(1&t)>0,t>>2&3){case 0:this.memStart=655360,this.memSize=131072;break;case 1:this.memStart=655360,this.memSize=65536;break;case 2:this.memStart=720896,this.memSize=32768;break;case 3:this.memStart=753664,this.memSize=32768}break;case 7:for(let e=0;e<this.planeCount;e++)this.colorDontCare[e]=(t&1<<e)>0;break;case 8:this.bitMask=t}this.gdcIndex<this.gdcRegisters.length&&(this.gdcRegisters[this.gdcIndex]=255&t);break;case 984:this.modeControlRegister=255&t;break;case 985:this.colorSelectRegister=255&t}else this.featureControlRegister=255&t;else this.setDataRegister(255&t)}peek(e){if(e<this.memStart||e>=this.memStart+this.memSize)return 0;let t=e-this.memStart;if(this.chain4)return this.planes[3&t][t>>2];const r=0==(1&t);this.oddEven&&(t>>=1);for(let e=0;e<this.planeCount;e++)this.latches[e]=this.planes[e][t];if(0==this.readMode)return this.oddEven?r?this.planes[0][t]:this.planes[1][t]:this.planes[this.readMapSelect][t];{const e=15&this.colorCompareRegister;let r=255;for(let i=0;i<this.planeCount;i++){if(!this.colorDontCare[i])continue;const a=this.planes[i][t],s=(e&1<<i)>0;let n=1;for(let e=0;e<8;e++)(a&n)>0!=s&&(r&=~n),n<<=1}return 255&r}}poke(e,t){if(e<this.memStart||e>=this.memStart+this.memSize)return;let r=e-this.memStart;if(this.chain4)return void(this.planes[3&r][r>>2]=t);const i=0==(1&r);this.oddEven&&(r>>=1),this.internalPoke(t,i,r)}internalPoke(e,t,r){if(0==this.writeMode){let a=e;this.rotateCount>0&&(a=255&(a>>this.rotateCount|a<<8-this.rotateCount));for(let e=0;e<this.planeCount;e++){if(!this.mapMask[e])continue;if(this.oddEven&&(t&&0!=e&&2!=e||!t&&1!=e&&3!=e))continue;const s=this.latches[e];let n=this.enableSetReset[e]?this.setReset[e]?255:0:a;switch(this.currentDataFunction){case i.And:n&=s;break;case i.Or:n|=s;break;case i.Xor:n^=s}this.planes[e][r]=255&(n&this.bitMask|s&~this.bitMask)}}else if(1==this.writeMode)for(let e=0;e<this.planeCount;e++)this.planes[e][r]=this.latches[e];else if(2==this.writeMode)for(let a=0;a<this.planeCount;a++){if(!this.mapMask[a])continue;if(this.oddEven&&(t&&0!=a&&2!=a||!t&&1!=a&&3!=a))continue;const s=this.latches[a];let n=(e&1<<a)>0?255:0;switch(this.currentDataFunction){case i.And:n&=s;break;case i.Or:n|=s;break;case i.Xor:n^=s}this.planes[a][r]=255&(n&this.bitMask|s&~this.bitMask)}}waitForScreenDraw(){if(0==this.screenUpdateClocks)return;const e=this.horAreaEndClocks-this.horAreaStartClocks;this.eventTimer.clockCount%this.screenUpdateClocks>=this.horAreaStartClocks&&Math.trunc(this.horAreaStartClocks+e/2)}calcRetraceEnable(){if(0==this.screenUpdateClocks)return{vertRetrace:!1,enable:!1};const e=this.eventTimer.clockCount%this.screenUpdateClocks,t=e<this.vertRetraceClocks;let r=!1;return e>=this.horAreaStartClocks&&e<this.horAreaEndClocks&&(r=(e-this.horAreaStartClocks)%this.lineClocks<this.horRetraceClocks),{vertRetrace:t,enable:r||t&&e>this.horRetraceClocks}}genColor(e){const t=((4&e)>0?170:0)+((32&e)>0?85:0),r=((2&e)>0?170:0)+((16&e)>0?85:0),i=((1&e)>0?170:0)+((8&e)>0?85:0);return s.JX.fromRgb(t,r,i)}genCgaColor(e){return this.cgaColors[(7&e)+((16&e)>0?8:0)]}updateTextScreen(e,t,r){this.charHeight=this.getMaximumCharScanLine()+1;const i=Math.trunc(this.colCount/this.charBoxWidth),a=Math.trunc(this.lineCount/this.charHeight),n=new Array(a*i);this.internalUpdateTextScreen(n,0,a,i,r);let l=0;for(let r=0;r<a;r++)for(let a=0;a<i;a++){const i=n[l],o=new s.Cs(a*this.charBoxWidth,r*this.charHeight,this.charBoxWidth,this.charHeight);this.writePixels(e,t,i,o),l++}}internalUpdateTextScreen(e,t,r,i,a){let s=this.getCrtStartAddr()+t*i,n=t*i;const l=this.getAllowSwitchCharSets(),o=this.charBoxWidth>this.charWidth,c=8192*this.characterMapA,h=8192*this.characterMapB;let u=0;for(let b=t;b<t+r;b++)for(let t=0;t<i;t++){const t=this.planes[1][s];let r;l?(u=(8&t)>0?c:h,r=a[7&t]):r=a[15&t];const i=this.blink&&(128&t)>0,b=this.blink?a[t>>4&7]:a[t>>4];i&&!this.cursorOn&&(r=b),e[n]=this.drawEgaVgaChar(this.planes[0][s],r,b,u,!1,s==this.getCursorPos()&&this.cursorOn,o),s++,n++}}drawEgaVgaChar(e,t,r,i,a,n,l){const o=new Uint32Array(this.charBoxWidth*this.charHeight);let c=0,h=!1;const u=this.planes[2],b=i+(e<<5),d=e>=192&&e<=223&&this.getEnableLineGraphicsCharacterCode();let g=s.JX.fromRgb(0,0,0);for(let e=0;e<this.charHeight;e++){const i=u[b+e];let s=128;const f=this.getCursorStart(),p=this.getCursorEnd();if(n&&f<this.charHeight&&p<this.charHeight){const t=0==p?this.charHeight-1:p;h=e>=f&&e<=t}const m=a&&e==this.getUnderlineLocation()||h;for(let e=0;e<this.charWidth;e++)g=m||(i&s)>0?t:r,s>>=1,o[c++]=g.value;l&&(o[c++]=d?g.value:r.value)}return o}updateScreenCgaLo(e){const t=this.getCgaGraphicsColors(this.colorSelectRegister),r=new Uint32Array(e.buffer);let i=0,a=0,s=8192;for(let e=0;e<200;e++){let n=0==(1&e)?a:s;for(let e=0;e<320;e+=4){const e=0==(1&n)?this.planes[0][n>>1]:this.planes[1][n>>1];let a;a=t[e>>6],r[i++]=a.value,a=t[e>>4&3],r[i++]=a.value,a=t[e>>2&3],r[i++]=a.value,a=t[3&e],r[i++]=a.value,n++}e%2==0?a=n:s=n}}updateScreenCgaMono(e,t,r){const i=s.JX.fromRgb(255,255,255),a=this.overscanColor,n=new Uint32Array(e.buffer);let l=0,o=0,c=8192;for(let e=0;e<r;e++){let r=0==(1&e)?o:c;for(let e=0;e<t;e+=8){let e=this.planes[0][r];for(let t=0;t<8;t++)n[l++]=(128&e)>0?i.value:a.value,e<<=1;r++}e%2==0?o=r:c=r}}updateScreen16Col(e,t,r,i){const a=new Uint32Array(e.buffer),s=0==this.getCrtOffset()?t/8:this.getCrtOffset()<<1;let n=this.getCrtStartAddr(),l=0;const o=this.getHorizontalPixelPanning(),c=0==o?t:t+8;for(let e=0;e<r;e++){let e=n;for(let t=0;t<c;t+=8,e++){const r=65535&e;let s=this.planes[0][r],n=this.planes[1][r],h=this.planes[2][r],u=this.planes[3][r];for(let e=0;e<8;e++){const r=i[((128&s)>>7)+((128&n)>>6)+((128&h)>>5)+((128&u)>>4)];(0==o||t+e>=o&&t+e<c-8+o)&&(a[l++]=r.value),s<<=1,n<<=1,h<<=1,u<<=1}}n+=s}}}},821:(e,t,r)=>{r.d(t,{H:()=>i});class i{constructor(){Object.defineProperty(this,"eventTimer",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"doCpuInterrupt",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}reset(){}}},841:(e,t,r)=>{r.d(t,{c:()=>s});var i=r(897),a=r(22);class s extends i._0{constructor(){super(),Object.defineProperty(this,"screenFrequency",{enumerable:!0,configurable:!0,writable:!0,value:60}),Object.defineProperty(this,"screenUpdateClocks",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"lineClocks",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"vertRetraceClocks",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"vertBlankClocks",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"horRetraceClocks",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"horAreaStartClocks",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"horAreaEndClocks",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"blink",{enumerable:!0,configurable:!0,writable:!0,value:!1}),Object.defineProperty(this,"colCount",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"lineCount",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"cgaColors",{enumerable:!0,configurable:!0,writable:!0,value:new Array(16)}),this.initCgaColors()}modeChanged(){}calcRetraceValues(){0!=this.lineCount&&(this.screenUpdateClocks=Math.trunc(1e3*a.Zr.cpuFrequency/this.screenFrequency),this.vertRetraceClocks=Math.trunc(this.screenUpdateClocks/50),this.vertBlankClocks=Math.trunc(this.screenUpdateClocks/100),this.lineClocks=Math.trunc((this.screenUpdateClocks-this.vertRetraceClocks-this.vertBlankClocks)/this.lineCount),this.horRetraceClocks=Math.trunc(this.lineClocks/5),this.horAreaStartClocks=this.vertRetraceClocks+Math.trunc(this.vertBlankClocks/2),this.horAreaEndClocks=this.horAreaStartClocks+this.lineClocks*this.lineCount)}calcVertRetrace(){return 0!=this.screenUpdateClocks&&this.eventTimer.clockCount%this.screenUpdateClocks<this.vertRetraceClocks}initCgaColors(){this.cgaColors[0]=i.JX.fromRgb(0,0,0),this.cgaColors[1]=i.JX.fromRgb(0,0,170),this.cgaColors[2]=i.JX.fromRgb(0,170,0),this.cgaColors[3]=i.JX.fromRgb(0,170,170),this.cgaColors[4]=i.JX.fromRgb(170,0,0),this.cgaColors[5]=i.JX.fromRgb(170,0,170),this.cgaColors[6]=i.JX.fromRgb(170,85,0),this.cgaColors[7]=i.JX.fromRgb(170,170,170),this.cgaColors[8]=i.JX.fromRgb(85,85,85),this.cgaColors[9]=i.JX.fromRgb(85,85,255),this.cgaColors[10]=i.JX.fromRgb(85,255,85),this.cgaColors[11]=i.JX.fromRgb(85,255,255),this.cgaColors[12]=i.JX.fromRgb(255,85,85),this.cgaColors[13]=i.JX.fromRgb(255,85,255),this.cgaColors[14]=i.JX.fromRgb(255,255,85),this.cgaColors[15]=i.JX.fromRgb(255,255,255)}getCgaGraphicsColors(e){const t=(16&e)>0?8:0,r=e>>5&1,i=new Array(4);return i[0]=this.cgaColors[15&e],0==r?(i[1]=this.cgaColors[2+t],i[2]=this.cgaColors[4+t],i[3]=this.cgaColors[6+t]):(i[1]=this.cgaColors[3+t],i[2]=this.cgaColors[5+t],i[3]=this.cgaColors[7+t]),i}}Object.defineProperty(s,"dataBuffer",{enumerable:!0,configurable:!0,writable:!0,value:new Array})},897:(e,t,r)=>{r.d(t,{Cs:()=>n,JX:()=>s,_0:()=>l});var i=r(821),a=r(22);class s{constructor(){Object.defineProperty(this,"r",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"g",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"b",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,writable:!0,value:0})}static fromRgb(e,t,r){const i=new s;return i.r=255&e,i.g=255&t,i.b=255&r,i.value=i.r+(i.g<<8)+(i.b<<16)+4278190080&4294967295,i}}class n{constructor(e,t,r,i){Object.defineProperty(this,"x",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"y",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,writable:!0,value:0}),this.x=e,this.y=t,this.width=r,this.height=i}}class l extends i.H{constructor(){super(),Object.defineProperty(this,"cursorBlinkDelay",{enumerable:!0,configurable:!0,writable:!0,value:250}),Object.defineProperty(this,"ignoredFields",{enumerable:!0,configurable:!0,writable:!0,value:new Set}),Object.defineProperty(this,"ignoredFieldsUpdate",{enumerable:!0,configurable:!0,writable:!0,value:new Set}),Object.defineProperty(this,"ram",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"cursorOn",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"cursorSwitchCountdown",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"cursorSwitchStartValue",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"charCache",{enumerable:!0,configurable:!0,writable:!0,value:new Map}),Object.defineProperty(this,"crtIndexReg",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"crtRegisters",{enumerable:!0,configurable:!0,writable:!0,value:new Uint8Array(25)}),Object.defineProperty(this,"startAddr",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"ramSize",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"screenWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"screenHeight",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"charWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"charHeight",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"supportWrite",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.defineProperty(this,"supportRead",{enumerable:!0,configurable:!0,writable:!0,value:!0}),this.cursorOn=!0,this.fillIgnoredFields(),this.ignoredFields.forEach((e=>this.ignoredFieldsUpdate.add(e)))}fillIgnoredFields(){this.ignoredFields.add("ignoredFields"),this.ignoredFields.add("ignoredFieldsUpdate"),this.ignoredFields.add("ram"),this.ignoredFields.add("charCache"),this.ignoredFieldsUpdate.add("cursorOn"),this.ignoredFieldsUpdate.add("cursorSwitchStartValue"),this.ignoredFieldsUpdate.add("cursorSwitchCountdown")}setRamSize(e){this.ramSize=e,this.ram=new Uint8Array(this.ramSize)}getCursorStart(){return this.crtRegisters[10]}getCursorEnd(){return this.crtRegisters[11]}getCursorPos(){return(this.crtRegisters[14]<<8)+this.crtRegisters[15]}setScreenUpdateRate(e){this.cursorSwitchStartValue=Math.trunc(this.cursorBlinkDelay*e/1e3)}loadCharSet(){}peek(e){return e>=this.startAddr&&e<this.startAddr+this.ramSize?this.ram[e-this.startAddr]:0}poke(e,t){e>=this.startAddr&&e<this.startAddr+this.ramSize&&(this.ram[e-this.startAddr]=t)}loadCharSetInternal(e,t,r,i){return new Promise(((r,i)=>{const s=new XMLHttpRequest;s.responseType="text",s.open("GET",a.Zr.baseDir+t,!0),s.onload=()=>{if(200!=s.status)return void i();const t=s.response.split(/\r?\n/);if(t.length>=256)for(let r=0;r<256;r++){const i=t[r].split(","),a=new Array(i.length);for(let e=0;e<i.length;e++)a[e]="1"==i[e];e[r]=a}r()},s.onerror=()=>{i()},s.send()}))}drawChar(e,t,r,i,a=!1,s=!1){const n=this.calcTextCharHash(r,i,e);if(!a&&!s){const e=this.charCache.get(n);if(e)return e}const l=new Uint32Array(this.charWidth*this.charHeight);let o=0,c=0,h=!1;const u=this.getCursorStart(),b=this.getCursorEnd();for(let e=0;e<this.charHeight;e++){s&&u<this.charHeight&&b<this.charHeight&&(h=u<=b?e>=u&&e<=b:e<=b||e>=u);const n=a&&e==this.charHeight-1||h;for(let e=0;e<this.charWidth;e++){const e=n||t[o]?r:i;o++,l[c++]=e.value}}return a||s||this.charCache.set(n,l),l}writePixels(e,t,r,i){const a=new Uint8Array(r.buffer);let s=4*(i.x+i.y*t),n=0;for(let r=0;r<i.height;r++)e.set(a.subarray(n,n+4*i.width),s),n+=4*i.width,s+=4*t}setIndexRegister(e){this.crtIndexReg=31&e}setDataRegister(e){this.crtIndexReg<this.crtRegisters.length&&(this.crtRegisters[this.crtIndexReg]=e)}getDataRegister(){return this.crtIndexReg>=12&&this.crtIndexReg<=15?this.crtRegisters[this.crtIndexReg]:0}updateDimensions(){}getJsonInitial(){return JSON.stringify(this,((e,t)=>{if(!this.ignoredFields.has(e))return"eventTimer"==e?{clockCount:this.eventTimer.clockCount}:t}))}getJsonUpdate(){return JSON.stringify(this,((e,t)=>{if(!this.ignoredFieldsUpdate.has(e))return"eventTimer"==e?{clockCount:this.eventTimer.clockCount}:t}))}applyJson(e){const t=JSON.parse(e);Object.assign(this,t)}getMemoryData(){return[this.ram.buffer]}updateMemory(e){this.ram=new Uint8Array(e[0])}updateScreen(e,t){this.cursorSwitchStartValue>0&&(0==this.cursorSwitchCountdown&&(this.cursorOn=!this.cursorOn,this.cursorSwitchCountdown=this.cursorSwitchStartValue),this.cursorSwitchCountdown--)}calcTextCharHash(e,t,r){return e.r+256*e.g+65536*e.b+t.r*2**24+t.g*2**32+t.b*2**40+r*2**48}}}}]);